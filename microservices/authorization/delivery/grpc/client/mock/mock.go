// Code generated by MockGen. DO NOT EDIT.
// Source: park_2020/2020_2_tmp_name/microservices/authorization/delivery/grpc/client (interfaces: AuthClientInterface)

package mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	models "park_2020/2020_2_tmp_name/models"
	reflect "reflect"
)

// MockAuthClientInterface is a mock of AuthClientInterface interface
type MockAuthClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAuthClientInterfaceMockRecorder
}

// MockAuthClientInterfaceMockRecorder is the mock recorder for MockAuthClientInterface
type MockAuthClientInterfaceMockRecorder struct {
	mock *MockAuthClientInterface
}

// NewMockAuthClientInterface creates a new mock instance
func NewMockAuthClientInterface(ctrl *gomock.Controller) *MockAuthClientInterface {
	mock := &MockAuthClientInterface{ctrl: ctrl}
	mock.recorder = &MockAuthClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockAuthClientInterface) EXPECT() *MockAuthClientInterfaceMockRecorder {
	return _m.recorder
}

// CheckSession mocks base method
func (_m *MockAuthClientInterface) CheckSession(_param0 context.Context, _param1 []*http.Cookie) (models.User, error) {
	ret := _m.ctrl.Call(_m, "CheckSession", _param0, _param1)
	ret0, _ := ret[0].(models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckSession indicates an expected call of CheckSession
func (_mr *MockAuthClientInterfaceMockRecorder) CheckSession(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "CheckSession", reflect.TypeOf((*MockAuthClientInterface)(nil).CheckSession), arg0, arg1)
}

// Login mocks base method
func (_m *MockAuthClientInterface) Login(_param0 context.Context, _param1 *models.LoginData) (string, error) {
	ret := _m.ctrl.Call(_m, "Login", _param0, _param1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Login indicates an expected call of Login
func (_mr *MockAuthClientInterfaceMockRecorder) Login(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Login", reflect.TypeOf((*MockAuthClientInterface)(nil).Login), arg0, arg1)
}

// Logout mocks base method
func (_m *MockAuthClientInterface) Logout(_param0 context.Context, _param1 string) error {
	ret := _m.ctrl.Call(_m, "Logout", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Logout indicates an expected call of Logout
func (_mr *MockAuthClientInterfaceMockRecorder) Logout(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Logout", reflect.TypeOf((*MockAuthClientInterface)(nil).Logout), arg0, arg1)
}
